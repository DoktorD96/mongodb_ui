{"version":3,"sources":["ContextData.js","App.js","index.js"],"names":["ContextData","createContext","window","selectedList","DONE","DATABASE","appLoadingData","a","handleDBloadVar","DatabaseHandler","Realm","id","credentials","apiKey","logIn","currentUser","mongoClient","db","collection","ContextProvider","props","useState","data","setDb","options","rowsSelected","serverSide","filterType","responsive","draggableColumns","enabled","print","filter","selectableRowsHeader","jumpToPage","rowsPerPageOptions","headerStyle","fontWeight","customToolbarSelect","selectedRows","displayData","setSelectedRows","i","l","length","push","dataIndex","onTableInit","find","clearInterval","timer","setInterval","onTableChange","action","tableState","page","totalpages","Math","floor","rowsPerPage","$","text","e","customToolbar","customSearch","searchQuery","currentRow","columns","config","setConfig","Provider","value","children","CustomCheckbox","Checkbox","App","React","useContext","useEffect","label","name","sort","download","searchable","customBodyRender","tableMeta","fallback","rowData","substring","toUpperCase","Avatar","style","backgroundColor","src","Link","href","target","display","filterOptions","names","logic","location","filters","row","indexOf","Date","parseInt","year","getUTCFullYear","getUTCMonth","getUTCDate","title","components","ReactDOM","render","Container","maxWidth","paddingBottom","Alert","severity","textAlign","document","getElementById"],"mappings":"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","file":"static/js/main.344d4f3a.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\nimport * as Realm from \"realm-web\";\r\n\r\nexport const ContextData = createContext();\r\nvar componentMount = false;\r\nwindow.selectedList = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\nwindow.DONE = false;\r\nwindow.DATABASE = null;\r\nwindow.appLoadingData = async function () {\r\n  var handleDBloadVar = null;\r\n  var DatabaseHandler = null;\r\n  handleDBloadVar = new Realm.App({ id: \"school-yzpuv\" });\r\n  const credentials = Realm.Credentials.apiKey(\"X20ZJF19CvzxWG1S9KM2LdqnIvposWto9haZmbyatYP1utq1SH2qV4O3m1q7VUhm\");\r\n  try {\r\n    await handleDBloadVar.logIn(credentials);\r\n    DatabaseHandler = handleDBloadVar.currentUser.mongoClient(\"mongodb-atlas\");\r\n    window.DATABASE = DatabaseHandler.db(\"tiktok\").collection(\"tiktokdata\");\r\n    //console.log(await window.DATABASE.find({}, { limit: 10 }));\r\n  } catch (err) {\r\n    //console.log(err);\r\n  }\r\n}\r\n\r\nexport const ContextProvider = props => {\r\n\r\n  const [db, setDb] = useState({ data: [] });\r\n\r\n  const [config, setConfig] = useState({\r\n    options: {\r\n      rowsSelected: [],\r\n      serverSide: false,\r\n      filterType: 'checkbox',\r\n      responsive: 'vertical',\r\n      draggableColumns: {\r\n        enabled: true\r\n      },\r\n      print: false,\r\n      filter: true,\r\n      selectableRowsHeader: true,\r\n      jumpToPage: true,\r\n      rowsPerPageOptions: [10, 25, 50, 100, 200, 300, 400, 500],\r\n      headerStyle: {\r\n        fontWeight: \"bold\"\r\n      },\r\n      customToolbarSelect: function (selectedRows, displayData, setSelectedRows) {\r\n        window.selectedList = [];\r\n        for (let i = 0, l = displayData.length; i < l; i++) {\r\n          window.selectedList.push(displayData[i].dataIndex);\r\n        }\r\n      },\r\n      onTableInit: async function () {\r\n        var timer = setInterval(initData, 1000);\r\n        async function initData() {\r\n          try {\r\n            if (window.DATABASE != null && window.DONE != true) {\r\n              window.DONE = true;\r\n              let data = {};\r\n              data.data = await window.DATABASE.find({}, {});\r\n              setDb(data);\r\n              clearInterval(timer);\r\n            } else {\r\n              window.appLoadingData();\r\n            }\r\n          } catch (e) {\r\n          }\r\n        }\r\n      },\r\n      onTableChange: async (action, tableState) => {\r\n        try {\r\n          var page = tableState.page + 1;\r\n          var totalpages = Math.floor(8620 / tableState.rowsPerPage);\r\n          $(\"#current_page\").text(page);\r\n          $(\"#total_pages\").text(totalpages);\r\n        } catch (e) { }\r\n      },\r\n      customToolbar: function () { return false; },\r\n      //searchText: \"\",\r\n      //search: false,\r\n      customSearch: function (searchQuery, currentRow, columns) {\r\n        debugger;\r\n      }\r\n      //customSearchRender: () => null\r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <ContextData.Provider value={[{ config, setConfig }, { db, setDb }]}>\r\n      { props.children}\r\n    </ContextData.Provider >\r\n  );\r\n}","import React, { useContext, useEffect, useCallback, /*componentDidMount*/ } from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport './App.css';\nimport { ContextData } from \"./ContextData\";\nimport Avatar from '@material-ui/core/Avatar';\nimport _lang from \"lodash/lang\";\nimport { DateRangePicker, DateRange } from \"materialui-daterange-picker\";\n// import * as Realm from \"realm-web\";\n\n\n\nconst CustomCheckbox = (props) => {\n  try {\n    if (props[\"data-description\"] == \"row-select-header\" || props[\"data-description\"] == \"row-select\") {\n      return \"\";\n    } else {\n      return <Checkbox {...props} />;\n    }\n  } catch (e) { return <Checkbox {...props} />; }\n};\n\n\n\nfunction App() {\n  const [open, setOpen] = React.useState(false);\n  const [{ config, setConfig }, { db, setDb }] = useContext(ContextData);\n  var timer = null;\n  // async function initData() {\n  //   // try {\n  //   //   if (window.DATABASE != null && window.DONE != true) {\n  //   //     console.log(\"1\");\n  //   //     window.DONE = true;\n  //   //     let response = await window.DATABASE.find({}, { limit: 10 });\n  //   //     db.data = response;\n  //   //     setDb(db);\n  //   //     clearInterval(timer);\n  //   //   } else {\n  //   //     console.log(\"2\");\n  //   //     window.appLoadingData();\n  //   //   }\n  //   // } catch (e) {\n  //   // }\n  // }\n\n\n  useEffect(() => {\n    //timer = setInterval(initData, 1000);\n  });\n\n\n  const columns = [\n    {\n      label: \"Avatar\",\n      name: \"Avatar\",\n      options: {\n        filter: false,\n        sort: false,\n        download: false,\n        searchable: false,\n        customBodyRender: (value, tableMeta) => {\n          let fallback = \"A\";\n          try {\n            fallback = tableMeta.rowData[1].substring(1, 2).toUpperCase();\n          } catch (e) { }\n          return (\n            <Avatar style={{ backgroundColor: \"#ff9800\" }} src={value}>{fallback}</Avatar>\n          );\n        }\n      }\n    },\n    {\n      label: \"User\",\n      name: \"Adress\",\n      options: {\n        searchable: true,\n        filter: false,\n        sort: true,\n      }\n    },\n    {\n      label: \"LinkProf\",\n      name: \"Link\",\n      options: {\n        searchable: false,\n        filter: false,\n        sort: true,\n        customBodyRender: (value, tableMeta) => {\n          try {\n            //var url = \"https://www.tiktok.com/@\" + tableMeta.rowData[3].toString();\n            return <Link\n              href={value}\n              target=\"_blank\"\n            >\n              {value}\n            </Link>;\n          } catch (e) { return value; }\n        }\n      }\n    },\n    {\n      label: \"IDhide\",\n      name: \"IdBroj\",\n      options: {\n        display: \"excluded\",\n        filter: false,\n        sort: true,\n      }\n    },\n\n    {\n      label: \"Ime\",\n      name: \"Ime\",\n      options: {\n        searchable: true,\n        filter: false,\n        sort: true,\n      }\n    },\n    {\n      label: \"Signature\",\n      name: \"Potpis\",\n      options: {\n        filter: true,\n        sort: true,\n        searchable: false,\n        filterOptions: {\n          names: ['No Signature', 'Signature'],\n          logic: (location, filters, row) => {\n            if (filters.indexOf(\"No Signature\") > -1 && filters.indexOf(\"Signature\") > -1) {\n              return true;\n            }\n            if ((location == \"#no_signature#\" || location == \"No bio yet\") && filters.indexOf(\"Signature\") > -1) {\n              return true;\n            } else if ((location != \"#no_signature#\" && location != \"No bio yet\") && filters.indexOf(\"No Signature\") > -1) {\n              return true;\n            } else {\n              return false;\n            }\n            return false;\n          },\n        },\n\n      }\n    },\n    {\n      label: \"Link\",\n      name: \"LinkOpis\",\n      options: {\n        searchable: false,\n        filter: true,\n        sort: true,\n        filterOptions: {\n          names: ['Link', 'No Link'],\n          logic: (location, filters, row) => {\n            if (filters.indexOf(\"No Link\") > -1 && filters.indexOf(\"Link\") > -1) {\n              return true;\n            }\n            if (location == \"#no_link#\" && filters.indexOf(\"Link\") > -1) {\n              return true;\n            } else if (location != \"#no_link#\" && filters.indexOf(\"No Link\") > -1) {\n              return true;\n            } else {\n              return false;\n            }\n            return false;\n          },\n        },\n      }\n    },\n    {\n      label: \"Kreiran\",\n      name: \"KreiranTimestamp\",\n      options: {\n        searchable: false,\n        filter: false,\n        sort: true,\n        customBodyRender: (value) => {\n          try {\n            var a = new Date(parseInt(value) * 1000);\n            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            var year = a.getUTCFullYear();\n            var month = months[a.getUTCMonth()];\n            var date = a.getUTCDate();\n            return month + '/' + date + '/' + year;\n          } catch (e) { return value; }\n        }\n      }\n\n\n    },\n    {\n      label: \"Prati\",\n      name: \"BrojOsobaKojePrati\",\n      options: {\n        searchable: false,\n        filter: false,\n        sort: true,\n      }\n    },\n    {\n      label: \"Pratioci\",\n      name: \"BrojPratilaca\",\n      options: {\n\n        searchable: false,\n        filter: false,\n        sort: true,\n      }\n    },\n    {\n      label: \"Lajkovi\",\n      name: \"BrojLajkova\",\n      options: {\n\n        searchable: false,\n        filter: false,\n        sort: true,\n      }\n    },\n    {\n      label: \"Br.Video\",\n      name: \"BrojVideoUploada\",\n      options: {\n        searchable: false,\n        filter: false,\n        sort: true,\n      }\n    },\n    {\n      label: \"Mejl\",\n      name: \"Mail\",\n      options: {\n        searchable: false,\n        filter: true,\n        sort: true,\n        filterOptions: {\n          names: ['Mejl', 'No Mejl'],\n          logic: (location, filters, row) => {\n            if (filters.indexOf(\"No Mejl\") > -1 && filters.indexOf(\"Mejl\") > -1) {\n              return true;\n            }\n            if (location == \"#no_email#\" && filters.indexOf(\"Mejl\") > -1) {\n              return true;\n            } else if (location != \"#no_email#\" && filters.indexOf(\"No Mejl\") > -1) {\n              return true;\n            } else {\n              return false;\n            }\n            return false;\n          },\n        },\n      }\n    }\n  ];\n\n  return (\n    <MUIDataTable\n      title={\"\"}\n      columns={columns}\n      options={config.options}\n      data={db.data}\n      components={{\n        Checkbox: CustomCheckbox,\n      }}\n    />\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link, Container, FormControl, Select, MenuItem, Checkbox, Button } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n//import DateRangePicker from 'react-bootstrap-daterangepicker';\nimport './index.css';\nimport App from './App';\nimport { ContextProvider } from \"./ContextData\";\n\n/*\n$.alert({\n                title: \"Invalid file type or empty file.\",\n                content: \"\",\n                draggable: false,\n                dragWindowBorder: false,\n                theme: \"white\",\n                backgroundDismiss: false,\n                backgroundDismissAnimation: \"\"\n            });\n            */\nReactDOM.render(\n  <ContextProvider>\n    <Container maxWidth={false}>\n      <div style={{ paddingBottom: \"20px\" }} />\n      <Alert severity=\"info\" id=\"footer\">Tiktok Scrapped Data for <b>MakeUp</b> Niche. Date: <b>05/30/2021</b></Alert>\n      <div style={{ paddingBottom: \"30px\" }} />\n      <App />\n      <div style={{ paddingBottom: \"20px\" }} />\n      <div style={{ textAlign: \"center\" }}>\n        Page <b id=\"current_page\">1</b> of <b id=\"total_pages\">1</b>\n      </div>\n      <div style={{ paddingBottom: \"20px\" }} />\n      <Alert severity=\"info\" id=\"footer\">Viser 2021, BigData</Alert>\n      <div style={{ paddingBottom: \"20px\" }} />\n    </Container>\n  </ContextProvider >, document.getElementById('root'));\n"],"sourceRoot":""}